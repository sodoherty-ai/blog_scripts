{
  "name": "Thumbs up / down",
  "type": "action",
  "valid": true,
  "status": "Available",
  "created": "2022-10-10T05:23:13.292Z",
  "updated": "2022-10-10T05:46:53.886Z",
  "language": "en",
  "skill_id": "2f57318e-7a45-46e2-998e-64b8e076a191",
  "workspace": {
    "actions": [
      {
        "steps": [
          {
            "step": "step_279",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "User registered positive response."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_279"
          }
        ],
        "title": "Thumbs up",
        "action": "action_19173",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_19173_intent_29655"
        },
        "variables": [
          {
            "title": "No response",
            "variable": "step_279",
            "data_type": "any"
          }
        ],
        "next_action": "action_42402",
        "topic_switch": {
          "allowed_from": false,
          "allowed_into": false
        },
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "step_960",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "<!-- Click the </> to see the code -->"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "title": "How was my joke?",
                  "options": [
                    {
                      "label": "üëç",
                      "value": {
                        "input": {
                          "text": "üëç"
                        }
                      }
                    },
                    {
                      "label": "üëé",
                      "value": {
                        "input": {
                          "text": "üëé"
                        }
                      }
                    }
                  ],
                  "response_type": "option"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_960"
          }
        ],
        "title": "Survey",
        "action": "action_38070",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_38070_intent_34007"
        },
        "variables": [
          {
            "variable": "step_312_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_730_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_730_result_2",
            "data_type": "any"
          },
          {
            "variable": "step_730_result_3",
            "data_type": "any"
          },
          {
            "variable": "step_730_result_4",
            "data_type": "any"
          },
          {
            "title": "<!-- Click the </> to see the code -->",
            "variable": "step_960",
            "data_type": "any"
          }
        ],
        "next_action": "action_19173",
        "topic_switch": {
          "allowed_from": false,
          "allowed_into": false
        },
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "step_730",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "<? {\n0: \"What do you get when you cross a bookshelf with an AI?<br><br>Shelf Awareness.\",\n1: \"Where does an AI go swimming?<br><br>In a data lake.\",\n2: \"I¬†can speak 10 languages. English and Binary.\"\n}[new java.util.Random().nextInt(3)]\n?>"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "action_38070",
                "parameters": null,
                "result_variable": "step_730_result_4"
              }
            },
            "variable": "step_730"
          }
        ],
        "title": "Jokes please!",
        "action": "action_41798",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_41798_intent_9675"
        },
        "variables": [
          {
            "variable": "step_312_result_1",
            "data_type": "any"
          },
          {
            "title": "<? { 0: \"What do you get when you cross a bookshelf with an AI?<",
            "variable": "step_730",
            "data_type": "any"
          },
          {
            "variable": "step_730_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_730_result_2",
            "data_type": "any"
          },
          {
            "variable": "step_730_result_3",
            "data_type": "any"
          },
          {
            "variable": "step_730_result_4",
            "data_type": "any"
          }
        ],
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": false,
          "allowed_into": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_279",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "User registered negative response."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_279"
          }
        ],
        "title": "Thumbs down",
        "action": "action_42402",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_19173_intent_35660"
        },
        "variables": [
          {
            "title": "User registered negative response.",
            "variable": "step_279",
            "data_type": "any"
          }
        ],
        "next_action": "action_41798",
        "topic_switch": {
          "allowed_from": false,
          "allowed_into": false
        },
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No action matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else",
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "To test, say \"Tell me a joke\"."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "title": "To test, say \"Tell me a joke\".",
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_38070",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "action_19173_intent_29655",
        "examples": [
          {
            "text": "üëç"
          }
        ]
      },
      {
        "intent": "action_19173_intent_35660",
        "examples": [
          {
            "text": "üëé"
          }
        ]
      },
      {
        "intent": "action_38070_intent_34007",
        "examples": []
      },
      {
        "intent": "action_41798_intent_9675",
        "examples": [
          {
            "text": "Another joke"
          },
          {
            "text": "Are there jokes?"
          },
          {
            "text": "Can you tell a joke?"
          },
          {
            "text": "Can you tell me a joke?"
          },
          {
            "text": "Do you have a joke?"
          },
          {
            "text": "Do you have humor?"
          },
          {
            "text": "Do you know a joke?"
          },
          {
            "text": "Do you like fun?"
          },
          {
            "text": "Do you like humor?"
          },
          {
            "text": "I am getting bored"
          },
          {
            "text": "I'm bored"
          },
          {
            "text": "I want a joke"
          },
          {
            "text": "One more joke"
          },
          {
            "text": "Surprise me with something hilarious"
          },
          {
            "text": "Tell me a joke"
          },
          {
            "text": "Tell me something funny"
          },
          {
            "text": "What do you do for fun?"
          },
          {
            "text": "What is your favorite joke?"
          }
        ]
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "entity_17250",
        "values": [
          {
            "type": "patterns",
            "value": "Regular_expression",
            "patterns": [
              "\"^(?:.*[a-z])(?:.*[A-Z])(?:.*\\d)(?:.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\""
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_25899",
        "values": [
          {
            "type": "patterns",
            "value": "Email",
            "patterns": [
              "\\b(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\\b"
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "sys-currency",
        "values": []
      },
      {
        "entity": "sys-date",
        "values": []
      },
      {
        "entity": "sys-number",
        "values": []
      },
      {
        "entity": "sys-percentage",
        "values": []
      },
      {
        "entity": "sys-time",
        "values": []
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      }
    },
    "variables": [],
    "data_types": [],
    "counterexamples": [],
    "system_settings": {
      "off_topic": {
        "enabled": true
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "confirm_return": {
            "text": "Return to previous topic?"
          },
          "confirm_switch": {
            "text": "Switch from the current topic?"
          }
        },
        "question_steps_threshold": 2
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above"
      },
      "intent_classification": {
        "training_backend_version": "v2"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": false
  },
  "description": "created for assistant 6e3d4609-1c8f-4732-8777-27f39e216914",
  "assistant_id": "1558ca29-9ed2-4506-8e33-177450e9ab02",
  "workspace_id": "2f57318e-7a45-46e2-998e-64b8e076a191",
  "dialog_settings": {},
  "next_snapshot_version": "1"
}